version: '3.9'
services:
  instant-mock:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: "${BACKEND_URL:-http://localhost}"
        REACT_APP_BACKEND_PORT: "${BACKEND_PORT:-3033}"
        REACT_APP_FRONTEND_URL: "${FRONTEND_URL:-http://localhost}"
        REACT_APP_FRONTEND_PORT: "${FRONTEND_PORT:-3033}"
        REACT_APP_FRONTEND_REQUIRE_AUTH: true
    container_name: instant-mock
    environment:
      REQUIRE_AUTH: true
      PORT: "${BACKEND_PORT:-3033}"
      NODE_ENV: "production"
      HOST: "0.0.0.0"
      SUPERTOKENS_CONNECTION_URI: "http://supertokens:3567"
      GITHUB_CLIENT_ID: "${GITHUB_CLIENT_ID}"
      GITHUB_CLIENT_SECRET: "${GITHUB_CLIENT_SECRET}"
      AZURE_CLIENT_ID: "${AZURE_CLIENT_ID}"
      AZURE_CLIENT_SECRET: "${AZURE_CLIENT_SECRET}"
    ports:
      - "${BACKEND_PORT:-3033}:${BACKEND_PORT:-3033}"
    volumes:
      - ./backend/data:/app/backend/data
    networks:
      - app_network
    depends_on:
      - supertokens
      - db
  db:
    image: 'postgres:latest'
    container_name: supertokens_db
    environment:
      POSTGRES_USER: supertokens_user
      POSTGRES_PASSWORD: somePassword
      POSTGRES_DB: supertokens
    ports:
      - 5432:5432
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'supertokens_user', '-d', 'supertokens']
      interval: 5s
      timeout: 5s
      retries: 5
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:latest
    container_name: supertokens
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens_user:somePassword@db:5432/supertokens"
    ports:
      - "3567:3567"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'

      interval: 10s
      timeout: 5s
      retries: 5
networks:
  app_network:
    driver: bridge
