version: '3.9'
services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-instant_mock}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strongpassword}
      POSTGRES_DB: ${POSTGRES_DB:-instant_mock_db}
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - pgdata:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: place@hold.er
      PGADMIN_DEFAULT_PASSWORD: placeholder
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "5050:80"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
      - ./.pgpass:/pgpass
    restart: unless-stopped
    user: root
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: backend-app
    environment:
      PORT: ${BACKEND_PORT:-3002}
      POSTGRES_USER: ${POSTGRES_USER:-instant_mock}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strongpassword}
      POSTGRES_DB: ${POSTGRES_DB:-instant_mock_db}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    command: npm run dev
    ports:
      - "${BACKEND_PORT:-3002}:${BACKEND_PORT:-3002}"
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: frontend-app
    environment:
      PORT: ${FRONTEND_DEV_SERVER_PORT:-3001}
      HOST: 0.0.0.0
      REACT_APP_API_BASE_URL: http://localhost:${BACKEND_PORT:-3002}
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    command: npm start
    ports:
      - "${FRONTEND_DEV_SERVER_PORT:-3001}:${FRONTEND_DEV_SERVER_PORT:-3001}"
volumes:
  pgdata:
  pgadmin_data:
